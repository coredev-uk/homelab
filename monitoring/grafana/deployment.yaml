apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: monitoring
data:
  grafana.ini: |
    [server]
    root_url = https://grafana.home.coredev.uk

    [security]
    admin_user = admin
    admin_password = admin

    [database]
    type = sqlite3
    path = /var/lib/grafana/grafana.db

    [auth.anonymous]
    enabled = false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        isDefault: true
        editable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
  namespace: monitoring
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-config
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  ports:
    - port: 3000
      targetPort: 3000
      name: web
  selector:
    app: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
  annotations:
    glance/name: "Grafana"
    glance/icon: "di:grafana"
    glance/url: "https://grafana.home.coredev.uk"
    glance/description: "Metrics Visualization"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:
        - name: fix-permissions
          image: busybox:1.35
          command:
            [
              "sh",
              "-c",
              "mkdir -p /var/lib/grafana && chown -R 472:472 /var/lib/grafana",
            ]
          volumeMounts:
            - name: config-storage
              mountPath: /var/lib/grafana
          securityContext:
            runAsUser: 0
      containers:
        - name: grafana
          image: grafana/grafana:12.2.0
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              value: "admin"
          volumeMounts:
            - name: config
              mountPath: /etc/grafana
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboards-config
              mountPath: /etc/grafana/provisioning/dashboards
            - name: dashboards
              mountPath: /var/lib/grafana/dashboards
            - name: config-storage
              mountPath: /var/lib/grafana
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          securityContext:
            runAsUser: 472
            runAsGroup: 472
      volumes:
        - name: config
          configMap:
            name: grafana-config
        - name: datasources
          configMap:
            name: grafana-datasources
        - name: dashboards-config
          configMap:
            name: grafana-dashboards-config
        - name: dashboards
          configMap:
            name: grafana-dashboards
        - name: config-storage
          persistentVolumeClaim:
            claimName: grafana-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
  namespace: monitoring
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'dashboards'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: monitoring
data:
  media-stack.json: |
    {
      "id": null,
      "title": "Media Stack",
      "tags": ["homelab", "media"],
      "style": "dark",
      "timezone": "browser",
      "refresh": "30s",
      "time": {
        "from": "now-6h",
        "to": "now"
      },
      "panels": [
        {
          "id": 1,
          "title": "Container Status",
          "type": "stat",
          "targets": [
            {
              "expr": "kube_pod_container_status_running{namespace=\"media\"}",
              "legendFormat": "{{pod}} - {{container}}"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "thresholds"},
              "thresholds": {
                "steps": [
                  {"color": "red", "value": null},
                  {"color": "green", "value": 1}
                ]
              }
            }
          },
          "gridPos": {"h": 8, "w": 24, "x": 0, "y": 0}
        },
        {
          "id": 7,
          "title": "VPN Status",
          "type": "stat",
          "targets": [
            {
              "expr": "gluetun_vpn_status",
              "legendFormat": "Connection Status"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "thresholds"},
              "thresholds": {
                "steps": [
                  {"color": "red", "value": null},
                  {"color": "green", "value": 1}
                ]
              },
              "mappings": [
                {"options": {"0": {"text": "Disconnected"}}, "type": "value"},
                {"options": {"1": {"text": "Connected"}}, "type": "value"}
              ]
            }
          },
          "gridPos": {"h": 4, "w": 8, "x": 0, "y": 8}
        },
        {
          "id": 8,
          "title": "VPN Location",
          "type": "stat",
          "targets": [
            {
              "expr": "gluetun_vpn_infos",
              "legendFormat": "{{city}}, {{country}}"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "fixed", "fixedColor": "blue"},
              "noValue": "No Data"
            }
          },
          "gridPos": {"h": 4, "w": 8, "x": 8, "y": 8}
        },
        {
          "id": 9,
          "title": "VPN Public IP",
          "type": "stat",
          "targets": [
            {
              "expr": "gluetun_vpn_infos",
              "legendFormat": "{{ip}}"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "fixed", "fixedColor": "purple"},
              "noValue": "No Data"
            }
          },
          "gridPos": {"h": 4, "w": 8, "x": 16, "y": 8}
        },
        {
          "id": 2,
          "title": "Storage Usage - Media",
          "type": "stat",
          "targets": [
            {
              "expr": "(1 - node_filesystem_avail_bytes{mountpoint=~\"/media.*\"} / node_filesystem_size_bytes{mountpoint=~\"/media.*\"}) * 100",
              "legendFormat": "{{mountpoint}}"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "unit": "percent",
              "color": {"mode": "thresholds"},
              "thresholds": {
                "steps": [
                  {"color": "green", "value": null},
                  {"color": "yellow", "value": 70},
                  {"color": "orange", "value": 85},
                  {"color": "red", "value": 95}
                ]
              }
            }
          },
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 12}
        },
        {
          "id": 3,
          "title": "Network Usage - VPN Containers",
          "type": "timeseries",
          "targets": [
            {
              "expr": "rate(container_network_receive_bytes_total{pod=~\".*gluetun.*|.*qflood.*|.*sabnzbd.*\"}[5m]) * 8",
              "legendFormat": "{{pod}} RX"
            },
            {
              "expr": "rate(container_network_transmit_bytes_total{pod=~\".*gluetun.*|.*qflood.*|.*sabnzbd.*\"}[5m]) * 8",
              "legendFormat": "{{pod}} TX"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "unit": "bps"
            }
          },
          "gridPos": {"h": 8, "w": 12, "x": 12, "y": 12}
        },
        {
          "id": 4,
          "title": "CPU Usage - Media Services",
          "type": "timeseries",
          "targets": [
            {
              "expr": "rate(container_cpu_usage_seconds_total{namespace=\"media\"}[5m]) * 100",
              "legendFormat": "{{pod}}"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "unit": "percent"
            }
          },
          "gridPos": {"h": 8, "w": 12, "x": 0, "y": 20}
        },
        {
          "id": 5,
          "title": "Memory Usage - Media Services",
          "type": "timeseries",
          "targets": [
            {
              "expr": "container_memory_usage_bytes{namespace=\"media\"} / 1024 / 1024",
              "legendFormat": "{{pod}}"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "unit": "MiB"
            }
          },
          "gridPos": {"h": 8, "w": 12, "x": 12, "y": 20}
        },
        {
          "id": 6,
          "title": "Disk I/O - Media Storage",
          "type": "timeseries",
          "targets": [
            {
              "expr": "rate(node_disk_read_bytes_total{device=~\"sd.*\"}[5m])",
              "legendFormat": "{{device}} Read"
            },
            {
              "expr": "rate(node_disk_written_bytes_total{device=~\"sd.*\"}[5m])",
              "legendFormat": "{{device}} Write"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "unit": "binBps"
            }
          },
          "gridPos": {"h": 8, "w": 24, "x": 0, "y": 28}
        }
      ]
    }
