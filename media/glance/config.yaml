server:
  port: 8080

theme:
  background-color: 210 20 96
  primary-color: 200 90 50
  contrast-multiplier: 1.2

  presets:
    catppuccin-mocha:
      background-color: 240 21 15
      contrast-multiplier: 1.2
      primary-color: 217 92 83
      positive-color: 115 54 76
      negative-color: 347 70 65

custom-widgets:
  - &media-widget
    type: custom-api
    template: |
      {{ $collapseAfter := .Options.IntOr "collapse-after" 5 }}
      {{ $showGrabbed := .Options.BoolOr "show-grabbed" false }}
      {{ $tzInput := .Options.StringOr "timezone" "+00" }}
      {{ $timezone := $tzInput }}
      {{ $sortTime := .Options.StringOr "sort-time" "desc" }}
      {{ $coverProxy := .Options.StringOr "cover-proxy" "" }}
      {{ $size := .Options.StringOr "size" "medium" }}
      {{ $service := .Options.StringOr "service" "" }}
      {{ $type := .Options.StringOr "type" "" }}
      {{ $intervalH := .Options.IntOr "interval" 0 | mul 24 }}

      {{ $nowUTC := offsetNow "0h" }}
      {{ $now := $nowUTC | formatTime "rfc3339" }}
      {{ $posInterval := (offsetNow (printf "+%dh" $intervalH)) | formatTime "rfc3339" }}
      {{ $negInterval := (offsetNow (printf "-%dh" $intervalH)) | formatTime "rfc3339" }}

      {{ $apiBaseUrl := .Options.StringOr "api-base-url" "" }}
      {{ $key := .Options.StringOr "key" "" }}
      {{ $url := .Options.StringOr "url" $apiBaseUrl }}

      {{ if or (and (ne $service "sonarr") (ne $service "radarr") (ne $service "lidarr"))
               (and (ne $type "upcoming") (ne $type "recent") (ne $type "missing")) 
               (eq $apiBaseUrl "") (eq $key "") (eq $url "") }}
        <div class="widget-error-header">
            <div class="color-negative size-h3">ERROR</div>
            <svg class="widget-error-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z"></path>
            </svg>
          </div>
          <p class="break-all">
            Some options are not set or malformed
              <table style="border-spacing: 1rem;">
                <tr><td>service</td><td>{{ $service }}</td><td>must be sonarr, radarr, or lidarr</td></tr>
                <tr><td>type</td><td>{{ $type }}</td><td>must be upcoming, recent, or missing</td></tr>
                <tr><td>api-base-url</td><td>{{ $apiBaseUrl }}</td><td>should include http(s):// and port if needed</td></tr>
                <tr><td>key</td><td>{{ $key }}</td><td></td></tr>
              </table> 
          </p>
      {{ else }}
        {{ $requestUrl := "" }}

        {{ if eq $service "sonarr" }}
          {{ if eq $type "recent" }}
            {{ $requestUrl = printf "%s/api/v3/history/since?includeSeries=true&includeEpisode=true&eventType=grabbed&date=%s" $apiBaseUrl $negInterval }}
          {{ else if eq $type "missing" }}
            {{ $requestUrl = printf "%s/api/v3/wanted/missing?page=1&pageSize=50&includeSeries=true" $apiBaseUrl }}
          {{ else if eq $type "upcoming" }}
            {{ $requestUrl = printf "%s/api/v3/calendar?includeSeries=true&start=%s&end=%s" $apiBaseUrl $now $posInterval }}
          {{ end }}
          
        {{ else if eq $service "radarr" }}
          {{ if eq $type "recent" }}
            {{ $requestUrl = printf "%s/api/v3/history/since?includeMovie=true&eventType=grabbed&date=%s" $apiBaseUrl $negInterval }}
          {{ else if eq $type "missing" }}
            {{ $requestUrl = printf "%s/api/v3/wanted/missing?page=1&pageSize=50" $apiBaseUrl }}
          {{ else if eq $type "upcoming" }}
            {{ $requestUrl = printf "%s/api/v3/calendar?start=%s&end=%s" $apiBaseUrl $now $posInterval }}
          {{ end }}
          
        {{ else if eq $service "lidarr" }}
          {{ if eq $type "recent" }}
            {{ $requestUrl = printf "%s/api/v1/history/since?includeArtist=true&includeAlbum=true&eventType=grabbed&date=%s" $apiBaseUrl $negInterval }}
          {{ else if eq $type "missing" }}
            {{ $requestUrl = printf "%s/api/v1/wanted/missing?page=1&pageSize=50&includeArtist=true" $apiBaseUrl }}
          {{ else if eq $type "upcoming" }}
            {{ $requestUrl = printf "%s/api/v1/calendar?includeArtist=true&start=%s&end=%s" $apiBaseUrl $now $posInterval }}
          {{ end }}
        {{ end }}

        {{ $data := newRequest $requestUrl
          | withHeader "Accept" "application/json"
          | withHeader "X-Api-Key" $key
          | getResponse }}

        <ul class="list list-gap-14 collapsible-container single-line-titles" data-collapse-after="{{ $collapseAfter }}">
          {{ $array := "" }}
          {{ $sortByField := "" }}
          {{ $itemDisplayed := false }}
          {{ $itemDate := "" }}
          {{ $isAvailable := false }}

          {{ if eq $type "missing" }}
            {{ $array = "records" }}
            {{ if eq $service "sonarr" }}
              {{ $sortByField = "airDateUtc" }}
            {{ else }}
              {{ $sortByField = "releaseDate" }}
            {{ end }}
          {{ else if eq $type "recent" }}
            {{ $sortByField = "date" }}
          {{ else }}
            {{ if eq $service "sonarr" }}
              {{ $sortByField = "airDateUtc" }}
            {{ else }}
              {{ $sortByField = "releaseDate" }}
            {{ end }}
          {{ end }}

          {{ range $data.JSON.Array $array | sortByTime $sortByField "rfc3339" $sortTime }}
             
            {{ if eq $service "sonarr" }}
              {{ $itemDate = .String "airDateUtc" }}
              {{ $isAvailable = true }}
            {{ else if eq $service "radarr"}}
              {{ $isAvailable = .Bool "isAvailable" }}
              {{ $itemDate = .String "releaseDate" }}
            {{ else if eq $service "lidarr"}}
              {{ $itemDate = .String "releaseDate" }}
              {{ $isAvailable = true }}
            {{ end }}

            {{ if or (eq $type "upcoming") (eq $type "recent") (and (or (and (gt $itemDate $negInterval) ((lt $itemDate $now ))) (eq $intervalH 0))  $isAvailable) }}
              {{ $itemDisplayed = true }}
              {{ $title := "" }}
              {{ $subtitle := "" }}
              {{ $coverUrl := "" }}
              {{ $status := "" }}
              {{ $coverBase := "" }}
              {{ $height := "" }}
              {{ $width := "" }}
              {{ $popoverTitle := "" }}
              {{ $popoverSubtitle := "" }}
              {{ $popoverSummary := "" }}
              {{ $summary := "" }}
              {{ $link := "" }}
              {{ $grabbed := false }}
              {{ $date := now }}
              {{ $datetype := "" }}
              {{ $seString := "" }}
              {{ $genres := "" }}
              {{ $buttonJustify := "left" }}


              {{ if eq $service "sonarr" }}
                {{ $series := "" }}
                {{ if eq $coverProxy "" }}
                  {{ $coverBase = printf "%s/api/v3/mediacover" $url }}
                  {{ $coverUrl = printf "%s/%s/poster-500.jpg?apikey=%s" $coverBase (.String "seriesId") $key }}
                {{ else }}
                  {{ $coverBase = $coverProxy }}
                  {{ $coverUrl = printf "%s/%s/poster-500.jpg" $coverBase (.String "seriesId") }}
                {{ end }}
                {{ $title = .String "series.title" }}
                {{ $link = printf "%s/series/%s#" $url (.String "series.titleSlug") }}
                {{ $series = .Get "series" }}
                {{ $genres = $series.Get "genres" }}
               
                {{ if eq $type "recent" }}
                  {{ $date = (.String "date" | parseTime "rfc3339") }}
                  {{ $subtitle = .String "episode.title" }}
                  {{ $summary = .String "episode.overview" }}
                  {{ $seString = printf "S%02dE%02d" (.Int "episode.seasonNumber") (.Int "episode.episodeNumber") }}
                  {{ $datetype = "Downloaded" }}
          
                  {{ if $showGrabbed }}
                    {{ $popoverTitle = .String "episode.title" }}
                    {{ $popoverSubtitle = $seString }}
                    {{ $popoverSummary = .String "episode.overview" }}
                    {{ if .Bool "episode.hasFile" }}
                      {{ $grabbed = true }}
                    {{ end }}
                  {{ else }}
                    {{ $popoverTitle = .String "series.title" }}
                    {{ $popoverSummary = .String "series.overview" }}
                  {{ end }}

                {{ else if eq $type "missing" }}
                  {{ $date = (.String "airDateUtc" | parseTime "rfc3339") }}
                  {{ $subtitle = .String "title" }}
                  {{ $summary = .String "overview" }}
                  {{ $seString = printf "S%02dE%02d" (.Int "seasonNumber") (.Int "episodeNumber") }}
                  {{ $datetype = "Aired" }}
                  {{ if $showGrabbed }}
                    {{ $popoverTitle = .String "title" }}
                    {{ $popoverSubtitle = $seString }}
                    {{ $popoverSummary = .String "overview" }}
                    {{ if .Bool "episode.hasFile" }}
                      {{ $grabbed = true }}
                    {{ end }}
                  {{ else }}
                    {{ $popoverTitle = .String "series.title" }}
                    {{ $popoverSummary = .String "series.overview" }}
                  {{ end }}
                {{ else if eq $type "upcoming" }}
                  {{ $date = (.String "airDateUtc" | parseTime "rfc3339") }}
                  {{ $subtitle = .String "title" }}
                  {{ $summary = .String "overview" }}
                  {{ $seString = printf "S%02dE%02d" (.Int "seasonNumber") (.Int "episodeNumber") }}
                  {{ $datetype = "Airs" }}
                  {{ if $showGrabbed }}
                    {{ $popoverTitle = .String "title" }}
                    {{ $popoverSubtitle = $seString }}
                    {{ $popoverSummary = .String "overview" }}
                    {{ if .Bool "hasFile" }}
                      {{ $grabbed = true }}
                    {{ end }}
                  {{ else }}
                    {{ $popoverTitle = .String "series.title" }}
                    {{ $popoverSummary = .String "series.overview" }}
                  {{ end }}
                {{ end }}
          
          
              {{ else if eq $service "radarr" }}
                {{ $movie := "" }}
                {{ $status = .String "status" }}
                {{ if eq $coverProxy "" }}
                  {{ $coverBase = printf "%s/api/v3/mediacover" $url }}
                {{ else }}
                  {{ $coverBase = $coverProxy }}
                {{ end }}
                {{ if eq $status "announced"}}
                  {{ if ne (.String "inCinemas") "" }}
                    {{ $date = (.String "inCinemas" | parseTime "rfc3339") }}
                    {{ $datetype = "In Cinemas" }}
                  {{ else }}
                    {{ $date = (.String "releaseDate" | parseTime "rfc3339") }}
                    {{ $datetype = "Releases" }}
                  {{ end }}
                {{ else if eq $status "inCinemas"}}
                  {{ $date = (.String "releaseDate" | parseTime "rfc3339") }}
                  {{ $datetype = "Releases" }}
                {{ else if eq $status "released"}}
                  {{ $date = (.String "releaseDate" | parseTime "rfc3339") }}
                  {{ $datetype = "Released" }}
                {{ end }}

                {{ if eq $type "recent" }}
                  {{ if eq $coverProxy "" }}
                    {{ $coverUrl = printf "%s/%s/poster-500.jpg?apikey=%s" $coverBase (.String "movie.id") $key }}
                  {{ else }}
                    {{ $coverUrl = printf "%s/%s/poster-500.jpg" $coverBase (.String "movie.id") }}
                  {{ end }}
                  {{ $datetype = "Downloaded" }}
                  {{ $date = (.String "date" | parseTime "rfc3339") }}
                  {{ $title = .String "movie.title" }}
                  {{ $subtitle = "" }}
                  {{ $summary = .String "movie.overview" }}
                  {{ $popoverTitle = .String "movie.title" }}
                  {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "02/01/2006") }}
                  {{ $popoverSummary = .String "movie.overview" }}
                  {{ $link = printf "%s/movie/%s#" $url (.String "movie.titleSlug") }}
                  {{ $movie = .Get "movie" }}
                  {{ $genres = $movie.Get "genres" }}
                  {{ if and $showGrabbed (gt (.Int "movie.movieFileId") 0) }}
                    {{ $grabbed = true }}
                  {{ end }}
                {{ else }}
                  {{ if eq $coverProxy "" }}
                    {{ $coverUrl = printf "%s/%s/poster-500.jpg?apikey=%s" $coverBase (.String "id") $key }}
                  {{ else }}
                    {{ $coverUrl = printf "%s/%s/poster-500.jpg" $coverBase (.String "id") }}
                  {{ end }}
                  {{ $title = .String "title" }}
                  {{ $subtitle = "" }}
                  {{ $summary = .String "overview" }}
                  {{ $link = printf "%s/movie/%s#" $url (.String "titleSlug") }}
                  {{ $popoverTitle = .String "title" }}
                  {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "02/01/2006") }}
                  {{ $popoverSummary = .String "overview" }}
                  {{ $genres = .Get "genres" }}
                  {{ if eq $type "missing" }}
                    {{ if and $showGrabbed (.Bool "movie.hasFile") }}
                      {{ $grabbed = true }}
                    {{ end }}
                  {{ else }}
                    {{ if and $showGrabbed (.Bool "hasFile") }}
                      {{ $grabbed = true }}
                    {{ end }}
                  {{ end }}
                {{ end }}

          
              {{ else if eq $service "lidarr" }}
                {{ $artist := "" }}
                {{ $album := "" }}
                {{ $albumId := "" }}
                {{ if eq $coverProxy "" }}
                  {{ $coverBase = printf "%s/api/v1/mediacover" $url }}
                {{ else }}
                  {{ $coverBase = $coverProxy }}
                {{ end }}

                {{ if eq $type "recent" }}
                  {{ $album = .Get "album" }}
                  {{ $artist = $album.Get "artist" }}
                  {{ if eq $coverProxy "" }}
                    {{ $coverUrl = printf "%s/album/%s/cover-500.jpg?apikey=%s" $coverBase (.String "albumId") $key }}
                  {{ else }}
                    {{ $coverUrl = printf "%s/album/%s/cover-500.jpg" $coverBase (.String "albumId") }}
                  {{ end }}
                  {{ $grabbed = true }}
                  {{ $title = $album.String "title" }}
                  {{ $date = (.String "date" | parseTime "rfc3339") }}
                  {{ $datetype = "Downloaded" }}
                  {{ $subtitle = $artist.String "artistName" }}
                  {{ $genres = $artist.Get "genres" }}
                  {{ $link = printf "%s/artist/%s#" $url ($artist.String "foreignArtistId") }}
                  {{ $summary = $album.String "overview" }}
                  {{ $popoverTitle = $album.String "title" }}
                  {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "02/01/2006") }}
                  {{ $popoverSummary = $artist.String "overview" }}

                {{ else }}
                  {{ $artist = .Get "artist" }}
                  {{ $album = .Get "album" }}
                  {{ if eq $type "missing" }}
                    {{ $datetype = "Released" }}
                  {{ else }}
                    {{ $datetype = "Releases" }}
                  {{ end }}
                  {{ range .Array "releases" }}
                    {{ $albumId = .String "albumId" }}
                    {{ break }}
                  {{ end }}
                  {{ if eq $coverProxy "" }}
                    {{ $coverUrl = printf "%s/album/%s/cover-500.jpg?apikey=%s" $coverBase $albumId $key }}
                  {{ else }}
                    {{ $coverUrl = printf "%s/album/%s/cover-500.jpg" $coverBase $albumId }}
                  {{ end }}
                  {{ $date = (.String "releaseDate" | parseTime "rfc3339") }}
                  {{ $title = .String "title" }}
                  {{ $subtitle = $artist.String "artistName" }}
                  {{ $summary = $album.String "overview" }}
                  {{ $genres = $artist.Get "genres" }}
                  {{ $link = printf "%s/artist/%s#" $url ($artist.String "foreignArtistId") }}
                  {{ $popoverTitle = .String "title" }}
                  {{ $popoverSubtitle = printf "%s %s" $datetype ($date | formatTime "02/01/2006") }}
                  {{ $popoverSummary = .String "artist.overview" }}
                {{ end }}
              {{ end }}
          
              {{ if eq $size "small" }}
                {{ $buttonJustify = "right" }}
                {{ $height = "9rem" }}
                {{ if eq $service "lidarr" }}
                  {{ $width = "9rem" }}
                {{ else }}
                  {{ $width = "6rem" }}
                {{ end }}
              {{ else if eq $size "medium" }}
                {{ $height = "12rem" }}
                {{ if eq $service "lidarr" }}
                  {{ $width = "12rem" }}
                {{ else }}
                  {{ $width = "8rem" }}
                {{ end }}
              {{ else if eq $size "large" }} 
                {{ $height = "15rem" }}
                {{ if eq $service "lidarr" }}
                  {{ $width = "15rem" }}
                {{ else }}
                  {{ $width = "10rem" }}
                {{ end }}
              {{ else if eq $size "huge" }} 
                {{ $height = "18rem" }}
                {{ if eq $service "lidarr" }}
                  {{ $width = "18rem" }}
                {{ else }}
                  {{ $width = "12rem" }}
                {{ end }}
              {{ end }}

              <li style="position: relative;">
                <div class="flex gap-10 items-start thumbnail-container thumbnail-parent">
                  <div>
                    <div data-popover-type="html" data-popover-position="above" data-popover-show-delay="500" style="width: {{ $width  }}; height: {{ $height }}; align-content: center;">
                      <div data-popover-html>
                        <div style="margin: 5px;">
                          <strong class="size-h4 color-primary" title="{{ $popoverTitle }}">{{ $popoverTitle }}</strong>
                          <div class="size-h4 text-truncate text-very-compact color-subdue" title="{{ $popoverSubtitle }}">{{ $popoverSubtitle }}</div>
                          <p class="margin-top-20" style="overflow-y: auto; text-align: justify; max-height: 20rem;">
                            {{ if ne $popoverSummary "" }}
                              {{ $popoverSummary }}
                            {{ else }}
                              TBA
                            {{ end }}
                          </p>
                         {{ if gt (len ($genres.Array "")) 0 }}
                          <ul class="attachments margin-top-20">
                            {{ range $genres.Array "" }}
                              <li>{{ .String "" }}</li>
                            {{ end }}
                          </ul>
                          {{ end }}
                        </div>
                      </div>
                      <img class="thumbnail" src="{{ $coverUrl }}" alt="Cover for {{ $title }}" loading="lazy" style="width: 100%; height: 100%; box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1); object-fit: cover; border-radius: 0.5rem;">
                    </div>
                </div>
                  <div class="shrink min-width-0" style="height: 9rem; position: relative; padding-top: 5px; padding-right: 5px;">
                    <strong class="size-h4 block text-truncate color-primary" title="{{ $title }}">{{ $title }}</strong>
                    <div class="text-truncate text-very-compact" title="{{ $subtitle }}">{{ $subtitle }}</div>
                    <div class="text-very-compact text-truncate">
                      {{ if eq $service "sonarr" }}
                        <div>{{ $seString }} - {{ $datetype }} {{ $date | formatTime "02/01 15:04" }}</div>
                      {{ else }}
                        <span>{{ $datetype }} {{ $date | formatTime "02/01" }}</span>
                      {{ end }}
                    </div>

                    {{ if $showGrabbed }}
                      {{ if eq $buttonJustify "right" }}
                        </div>
                        <a href="{{ $link }}" class="bookmarks-link size-h4 color-primary" target="_blank" rel="noreferrer"
                          style="position: absolute; bottom: 1rem; right: 1rem;
                            {{ if $grabbed }} color: var(--color-positive); border: 1px solid var(--color-positive); {{ else }} color: var(--color-negative); border: 1px solid var(--color-negative); {{ end }}
                            font-weight: bold; padding: 2px 5px; border-radius: 3px; display: inline-block; margin-top: 5px; text-decoration: none;">
                        {{ if $grabbed }}Grabbed{{ else }}Missing{{ end }}
                        </a>
                      {{ else }}
                        <a href="{{ $link }}" class="bookmarks-link size-h4 color-primary" target="_blank" rel="noreferrer"
                          style="{{ if $grabbed }} color: var(--color-positive); border: 1px solid var(--color-positive); {{ else }} color: var(--color-negative); border: 1px solid var(--color-negative); {{ end }}
                            font-weight: bold; padding: 2px 5px; border-radius: 3px; display: inline-block; margin-top: 5px; text-decoration: none;">
                        {{ if $grabbed }}Grabbed{{ else }}Missing{{ end }}
                        </a>
                        </div>
                      {{ end }}
                    {{ else }}
                      <div class="{{ if eq $size "small" }}text-truncate{{ if eq $service "radarr" }} margin-top-5{{ end }}{{ else }}text-truncate-2-lines margin-top-5{{ end }}">
                        {{ $summary }}
                      </div>
                    {{ end }}
                </div>
              </li>
            {{ end }}
          {{ end }}
          {{ if not $itemDisplayed }}
            <li>No items found.</li>
          {{ end }}
        </ul>
      {{ end }}

pages:
  - name: Homelab
    columns:
      - size: small
        widgets:
          - type: calendar

          - type: weather
            location: ${GLANCE_WEATHER_LOCATION}
            show-area-name: true

          - type: dns-stats
            service: pihole-v6
            url: http://pihole-web.dns
            username: admin
            password: ${PIHOLE_PASSWORD}

          - type: server-stats
            title: Server Performance
            servers:
              - type: local
                name: Homelab Server

          - type: markets
            title: Portfolio
            markets:
              - symbol: VUSA.L
                name: S&P 500 ACC
              - symbol: NVDA
                name: Nvidia
              - symbol: MAB.L
                name: Mitchells & Butlers

          - type: markets
            title: Crypto
            markets:
              - symbol: BTC-USD
                name: Bitcoin
              - symbol: ETH-USD
                name: Ethereum

          - type: custom-api
            title: VPN Status
            cache: 1m
            url: http://gluetun-media.media:8000/v1/publicip/ip
            subrequests:
              port-status:
                url: http://gluetun-media.media:8000/v1/openvpn/portforwarded
            template: |
              {{ if eq .Response.StatusCode 200 }}
                {{ $ip := (.JSON.String "public_ip") }}
                {{ $city := (.JSON.String "city") }}
                {{ $country := (.JSON.String "country") }}
                {{ $portRequest := .Subrequest "port-status" }}
                {{ if eq $ip "" }}
                 <div>
                   <div class="color-highlight size-h4">
                     <span class="color-negative">Disconnected ●</span> 
                   </div>
                 </div>
                {{ else }}
                 <div>
                   <div class="color-highlight size-h4">
                     <span class="color-positive">Connected ●</span> 
                   </div>
                   <div class="size-h6">{{ $ip }} - {{ $city }}, {{ $country }}</div>
                 {{ if eq $portRequest.Response.StatusCode 200 }}
                     {{ $forwardedPort := $portRequest.JSON.Int "port" }}
                     {{ if eq $forwardedPort 0 }}
                       <div class="size-h6 color-warning">Port: Waiting for assignment...</div>
                     {{ else }}
                       <div class="size-h6 color-positive">Port: {{ $forwardedPort }}</div>
                     {{ end }}
                   {{ else }}
                     <div class="size-h6 color-negative">Port: Check failed</div>
                   {{ end }}
                 </div>
                {{ end }}
              {{ else }}
               <div class="color-negative size-h4">
                 VPN: Error {{ .Response.StatusCode }}
               </div>
              {{ end }}

      - size: full
        widgets:
          - type: bookmarks
            title: Media Services
            groups:
              - title: Management
                links:
                  - title: ArgoCD
                    url: https://argocd.home.coredev.uk
                    icon: si:argo
                  - title: Pihole
                    url: https://pihole.home.coredev.uk/admin
                    icon: si:pihole
                  - title: Longhorn
                    url: https://longhorn.home.coredev.uk
                    icon: si:rancher

              - title: Media Stack
                links:
                  - title: Jellyfin
                    url: https://jellyfin.home.coredev.uk
                    icon: si:jellyfin
                  - title: Jellyseerr
                    url: https://jellyseerr.home.coredev.uk
                    icon: sh:jellyseerr-light
                  - title: Radarr
                    url: https://radarr.home.coredev.uk
                    icon: si:radarr
                  - title: Sonarr
                    url: https://sonarr.home.coredev.uk
                    icon: si:sonarr
                  - title: Bazarr
                    url: https://bazarr.home.coredev.uk
                    icon: sh:bazarr-light
                  - title: Prowlarr
                    url: https://prowlarr.home.coredev.uk
                    icon: sh:prowlarr-light

              - title: Helper Apps
                links:
                  - title: Notifiarr
                    url: https://notifiarr.home.coredev.uk
                    icon: mdi:bell-ring
                  - title: Cleanuparr
                    url: https://cleanuparr.home.coredev.uk
                    icon: mdi:broom
                  - title: Huntarr
                    url: https://huntarr.home.coredev.uk
                    icon: mdi:magnify

              - title: Downloads
                links:
                  - title: qBittorrent (Flood)
                    url: https://qbittorrent.home.coredev.uk
                    icon: si:qbittorrent
                  - title: SABnzbd
                    url: https://sabnzbd.home.coredev.uk
                    icon: sh:sabnzbd-light

              - title: Security
                links:
                  - title: Frigate
                    url: https://frigate.home.coredev.uk
                    icon: si:frigate

              - title: Monitoring
                links:
                  - title: Grafana
                    url: https://grafana.home.coredev.uk
                    icon: si:grafana
                  - title: Prometheus
                    url: https://prometheus.home.coredev.uk
                    icon: si:prometheus

          - type: rss
            title: Tech News
            feeds:
              - url: https://news.itsfoss.com/latest/rss
                title: "It's FOSS"
              - url: https://feeds.arstechnica.com/arstechnica/index
                title: "Ars Technica"
              - url: https://www.techradar.com/uk/feeds.xml
                title: "TechRadar"
              - url: https://9to5mac.com/feed/
                title: "9to5Mac"
            limit: 8

          - type: extension
            title: Services Status
            url: http://glance-k8s.media:8080/extension/apps
            allow-potentially-dangerous-html: true
            cache: 1s
            parameters:
              show-if: |
                (namespace == "media" or
                namespace == "core" or
                namespace == "monitoring" or
                namespace == "dns" or
                namespace == "security") and
                ("glance/hide" not in annotations || annotations["glance/hide"] != "true")

          - type: releases
            title: Infrastructure & Core Updates
            repositories:
              - glanceapp/glance # Dashboard
              - argoproj/argo-cd # GitOps
              - qmcgaw/gluetun # VPN Gateway
              - longhorn/longhorn # Storage
              - bitnami/sealed-secrets-controller # Secret Management
              - prometheus/prometheus # Monitoring
              - grafana/grafana # Visualization
              - prometheus/node_exporter # System Metrics
              - blakeblackshear/frigate # CCTV/AI
              - pihole/pihole # DNS Ad Blocker
              - intel/intel-gpu-plugin # Intel GPU Device Plugin
              - traefik/traefik # Reverse Proxy
            limit: 12
            collapse-after: 2

          - type: releases
            title: Media Stack Updates
            repositories:
              - jellyfin/jellyfin # Media Server
              - fallenbagel/jellyseerr # Request Management
              - linuxserver/radarr # Movies
              - linuxserver/sonarr # TV Shows
              - linuxserver/bazarr # Subtitles
              - linuxserver/prowlarr # Indexers
              - linuxserver/qbittorrent # Torrents
              - jesec/flood # Flood UI for qBittorrent
              - linuxserver/sabnzbd # Usenet
              - golift/notifiarr # Notifications
              - flaresolverr/flaresolverr # Cloudflare Bypass
              - cleanuparr/cleanuparr # Media Cleanup
              - huntarr/huntarr # Duplicate Hunter
              - thephaseless/byparr # Prowlarr Bypass
            limit: 14
            collapse-after: 2

          - <<: *media-widget
            title: Movie Releases
            title-url: "https://radarr.home.coredev.uk"
            cache: 30m
            options:
              service: radarr
              type: upcoming
              size: medium
              collapse-after: 3
              show-grabbed: false
              interval: 20
              timezone: "Europe/London"
              api-base-url: "http://radarr.media:7878"
              key: ${RADARR_API_KEY}
              url: "https://radarr.home.coredev.uk"

          # Sonarr Media Release Widget
          - <<: *media-widget
            title: TV Releases
            title-url: "https://sonarr.home.coredev.uk"
            cache: 30m
            options:
              service: sonarr
              type: upcoming
              size: medium
              collapse-after: 3
              show-grabbed: false
              interval: 20
              api-base-url: "http://sonarr.media:8989"
              key: ${SONARR_API_KEY}
              url: "https://sonarr.home.coredev.uk"
              timezone: "Europe/London"

          - type: videos
            title: Video Feed
            channels:
              - UCeeFfhMcJa1kjtfZAGskOCA # Tech Linked
              - UCHnyfMqiRRG1u-2MsSQLbXA # Veritasium
              - UCsBjURrPoezykLs9EqgamOA # Fireship
              - UCUyeluBRhGPCW4rPe_UvBZQ # ThePrimeagen
            limit: 8
            collapse-after: 4
            style: horizontal-cards

  - name: Formula 1
    columns:
      - size: small
        widgets:
          - type: custom-api
            title: Next Race
            cache: 1h
            url: https://f1api.dev/api/current/next?timezone=Europe/London
            template: |
              <div class="flex flex-column gap-10">
                {{ $session := index (.JSON.Array "race") 0 }}
                <p class="size-h5">
                  Round {{ .JSON.String "round" }}
                </p>

                <div class="margin-block-4">
                  <p class="color-highlight">{{ $session.String "raceName" }}</p>

                  <div class="margin-block-10"></div>

                  <!-- Race -->
                  <p class="color-primary">
                    <span>Race</span>
                    {{ $raceDate := $session.String "schedule.race.date" }}
                    {{ $raceTime := $session.String "schedule.race.time" }}
                    {{ $raceDateTime := concat $raceDate "T" $raceTime }}
                    {{ $parsedRaceTime := parseLocalTime "2006-01-02T15:04:05" $raceDateTime }}
                    {{ $now := now }}
                    {{ if $parsedRaceTime.Before $now }}
                      <span class="color-highlight">Completed</span>
                    {{ else }}
                      <span class="color-highlight" {{ $parsedRaceTime | toRelativeTime }}></span>
                    {{ end }}
                  </p>
                  <p class="size-h5">{{ $raceDate }} at {{ $raceTime }}</p>

                  <!-- Qualifying -->
                  <p class="color-primary">
                    <span>Qualifying</span>
                    {{ $qualyDate := $session.String "schedule.qualy.date" }}
                    {{ $qualyTime := $session.String "schedule.qualy.time" }}
                    {{ $qualyDateTime := concat $qualyDate "T" $qualyTime }}
                    {{ $parsedQualyTime := parseLocalTime "2006-01-02T15:04:05" $qualyDateTime }}
                    {{ $now := now }}
                    {{ if $parsedQualyTime.Before $now }}
                      <span class="color-highlight">Completed</span>
                    {{ else }}
                      <span class="color-highlight" {{ $parsedQualyTime | toRelativeTime }}></span>
                    {{ end }}
                  </p>
                  <p class="size-h5">{{ $qualyDate }} at {{ $qualyTime }}</p>

                  <!-- Sprint Race - only if date is not null -->
                  {{ if and (ne ($session.String "schedule.sprintRace.date") "null") (ne ($session.String "schedule.sprintRace.date") "") }}
                  <p class="color-primary">
                    <span>Sprint Race</span>
                    {{ $sprintRaceDate := $session.String "schedule.sprintRace.date" }}
                    {{ $sprintRaceTime := $session.String "schedule.sprintRace.time" }}
                    {{ $sprintRaceDateTime := concat $sprintRaceDate "T" $sprintRaceTime }}
                    {{ $parsedSprintRaceTime := parseLocalTime "2006-01-02T15:04:05" $sprintRaceDateTime }}
                    {{ $now := now }}
                    {{ if $parsedSprintRaceTime.Before $now }}
                      <span class="color-highlight">Completed</span>
                    {{ else }}
                      <span class="color-highlight" {{ $parsedSprintRaceTime | toRelativeTime }}></span>
                    {{ end }}
                  </p>
                  <p class="size-h5">{{ $sprintRaceDate }} at {{ $sprintRaceTime }}</p>
                  {{ end }}
                </div>

                <ul class="size-h5 attachments">
                  <li>{{ $session.String "circuit.country" }}</li>
                  <li>{{ $session.String "circuit.city" }}</li>
                  <li>{{ $session.String "laps" }} Laps</li>
                  <li>{{ $session.String "circuit.circuitName" }}</li>
                </ul>
              </div>

      - size: full
        widgets:
          - type: custom-api
            title: Last Race Results
            cache: 1d
            url: https://f1api.dev/api/current/last/race
            template: |
              <div class="flex flex-column gap-10">
                <p class="size-h5">{{ .JSON.String "races.raceName" }}</p>
                <ul class="list collapsible-container" data-collapse-after="5">
                  {{ range $i, $v := .JSON.Array "races.results" }}
                  <li class="flex items-center {{ if eq $i 0 }}color-primary{{ else if eq $i 1 }}color-highlight{{ end }}">
                    <span class="grow min-width-0">{{ .String "position" }}. {{ .String "driver.shortName" }}</span>
                    <span class="shrink-0 text-right">{{ .String "time" }}</span>
                  </li>
                  {{ end }}
                </ul>
              </div>

          - type: custom-api
            title: Drivers Championship
            cache: 1d
            url: https://f1api.dev/api/current/drivers-championship
            template: |
              <ul class="list collapsible-container" data-collapse-after="5">
                {{ range $i, $v := .JSON.Array "drivers_championship" }}
                <li class="flex items-center {{ if eq $i 0 }}color-primary{{ else if eq $i 1 }}color-highlight{{ end }}">
                  <div class="grow min-width-0">
                    <span>{{ .String "position" }}. {{ .String "driver.shortName" }}</span>
                    <span class="size-h6">({{ .String "team.teamName" }})</span>
                  </div>
                  <span class="shrink-0 text-right">{{ .String "points" }}</span>
                </li>
                {{ end }}
              </ul>

          - type: custom-api
            title: Constructors Championship
            cache: 1d
            url: https://f1api.dev/api/current/constructors-championship
            template: |
              <ul class="list collapsible-container" data-collapse-after="5">
                {{ range $i, $v := .JSON.Array "constructors_championship" }}
                <li class="flex items-center {{ if eq $i 0 }}color-primary{{ else if eq $i 1 }}color-highlight{{ end }}">
                  <span class="grow min-width-0">{{ .String "position" }}. {{ .String "team.teamName" }}</span>
                  <span class="shrink-0 text-right">{{ .String "points" }}</span>
                </li>
                {{ end }}
              </ul>
