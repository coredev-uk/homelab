#
# SABnzbd Deployment with Built-in VPN
# Uses hotio container with integrated WireGuard support
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sabnzbd
  namespace: media
  labels:
    app: sabnzbd
  annotations:
    glance/name: "SABnzbd"
    glance/icon: "mdi:download"
    glance/description: "Usenet Downloader"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sabnzbd
  template:
    metadata:
      labels:
        app: sabnzbd
    spec:
      # VPN functionality requires elevated privileges
      securityContext:
        runAsNonRoot: false
      # DNS configuration to use container's internal DNS when VPN is active
      dnsConfig:
        nameservers:
          - "127.0.0.1" # Internal DNS when VPN is active
        options:
          - name: ndots
            value: "1"

      # Init container to construct WireGuard config from ConfigMap + sealed secret
      initContainers:
        - name: setup-wireguard-config
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              mkdir -p /config/wireguard
              
              # Copy WireGuard config template from ConfigMap
              if [ -f /configmap/sabnzbd-wg0.conf ]; then
                cp /configmap/sabnzbd-wg0.conf /config/wireguard/wg0.conf
                
                # Inject the private key from environment variable
                if [ -n "$WIREGUARD_PRIVATE_KEY" ]; then
                  # Add PrivateKey line after [Interface] section
                  sed -i '/\[Interface\]/a PrivateKey = '"$WIREGUARD_PRIVATE_KEY" /config/wireguard/wg0.conf
                  chmod 600 /config/wireguard/wg0.conf
                  echo "WireGuard config constructed successfully with private key"
                else
                  echo "Error: WIREGUARD_PRIVATE_KEY environment variable not set"
                  exit 1
                fi
              else
                echo "Error: WireGuard config template not found at /configmap/sabnzbd-wg0.conf"
                exit 1
              fi
          env:
            - name: WIREGUARD_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: sabnzbd-wireguard-key
                  key: private_key
          volumeMounts:
            - name: sabnzbd-config
              mountPath: /config
            - name: vpn-config
              mountPath: /configmap

      containers:
        - name: sabnzbd
          image: cr.hotio.dev/hotio/sabnzbd:latest
          ports:
            - containerPort: 8080
              name: sabnzbd-ui
              protocol: TCP

          # VPN requires NET_ADMIN capability
          securityContext:
            capabilities:
              add:
                - NET_ADMIN

          env:
            # Basic container configuration
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  name: vpn-config
                  key: TZ
            - name: UMASK
              value: "002"

            # VPN Configuration - Using ConfigMap for provider settings
            - name: VPN_ENABLED
              value: "true"
            - name: VPN_CONF
              value: "wg0"
            - name: VPN_PROVIDER
              valueFrom:
                configMapKeyRef:
                  name: vpn-config
                  key: VPN_PROVIDER
            - name: VPN_LAN_NETWORK
              value: "10.42.0.0/16,10.43.0.0/16,192.168.1.0/24"
            - name: VPN_LAN_LEAK_ENABLED
              value: "false"
            - name: VPN_AUTO_PORT_FORWARD
              valueFrom:
                configMapKeyRef:
                  name: vpn-config
                  key: VPN_AUTO_PORT_FORWARD_DISABLED
            - name: VPN_FIREWALL_TYPE
              value: "auto"
            - name: VPN_HEALTHCHECK_ENABLED
              value: "false"
            - name: VPN_EXPOSE_PORTS_ON_LAN
              value: "8080/tcp"

            # DNS configuration (from ConfigMap)
            - name: VPN_NAMESERVERS
              valueFrom:
                configMapKeyRef:
                  name: vpn-config
                  key: DNS

            # Privoxy not needed for SABnzbd
            - name: PRIVOXY_ENABLED
              value: "false"

          volumeMounts:
            - name: sabnzbd-config
              mountPath: /config
            - name: downloads
              mountPath: /downloads
            - name: sabnzbd-scripts
              mountPath: /scripts
            - name: tun-device
              mountPath: /dev/net/tun

          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "2Gi"
              cpu: "1000m"

          # Health checks
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 5

      volumes:
        # SABnzbd configuration storage
        - name: sabnzbd-config
          persistentVolumeClaim:
            claimName: sabnzbd-config

        # Downloads directory (shared with other media apps)
        - name: downloads
          persistentVolumeClaim:
            claimName: downloads-data-host

        # SABnzbd scripts
        - name: sabnzbd-scripts
          configMap:
            name: sabnzbd-scripts
            defaultMode: 0755

        # VPN ConfigMap with WireGuard templates
        - name: vpn-config
          configMap:
            name: vpn-config

        # TUN device for VPN
        - name: tun-device
          hostPath:
            path: /dev/net/tun
            type: CharDevice

---
# Persistent Volume Claim for SABnzbd configuration
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sabnzbd-config
  namespace: media
  labels:
    app: sabnzbd
    component: config
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn

---
# ConfigMap for SABnzbd scripts
apiVersion: v1
kind: ConfigMap
metadata:
  name: sabnzbd-scripts
  namespace: media
  labels:
    app: sabnzbd
    component: scripts
data:
  # Add custom scripts here if needed
  placeholder.sh: |
    #!/bin/bash
    echo "No custom scripts configured"

---
# Service for SABnzbd
apiVersion: v1
kind: Service
metadata:
  name: sabnzbd
  namespace: media
  labels:
    app: sabnzbd
spec:
  type: ClusterIP
  selector:
    app: sabnzbd
  ports:
    - port: 8080
      targetPort: sabnzbd-ui
      protocol: TCP
      name: sabnzbd-ui

