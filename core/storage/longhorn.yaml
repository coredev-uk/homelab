apiVersion: v1
kind: Namespace
metadata:
  name: longhorn-system
  labels:
    name: longhorn-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: longhorn-default-setting
  namespace: longhorn-system
data:
  default-setting.yaml: |-
    backup-target: ""
    backup-target-credential-secret: ""
    allow-recurring-job-while-volume-detached: "false"
    create-default-disk-labeled-nodes: "true"
    default-data-path: "/var/lib/longhorn/"
    replica-soft-anti-affinity: "false"
    replica-auto-balance: "disabled"
    storage-over-provisioning-percentage: "100"
    storage-minimal-available-percentage: "25"
    upgrade-checker: "true"
    default-replica-count: "2"
    default-longhorn-static-storage-class: "longhorn"
    backupstore-poll-interval: "300"
    taint-toleration: ""
    system-managed-components-node-selector: ""
    priority-class: ""
    auto-salvage: "true"
    auto-delete-pod-when-volume-detached-unexpectedly: "true"
    disable-scheduling-on-cordoned-node: "true"
    replica-zone-soft-anti-affinity: "true"
    replica-disk-soft-anti-affinity: "false"
    node-down-pod-deletion-policy: "delete-both-statefulset-and-deployment-pod"
    node-drain-policy: "block-if-contains-last-replica"
    detach-manually-attached-volumes-when-cordoned: "true"
    concurrent-automatic-engine-upgrade-per-node-limit: "0"
    backing-image-cleanup-wait-interval: "60"
    backing-image-recovery-wait-interval: "300"
    guaranteed-engine-manager-cpu: "12"
    guaranteed-replica-manager-cpu: "12"
---
# Longhorn Manager DaemonSet
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: longhorn-manager
  name: longhorn-manager
  namespace: longhorn-system
spec:
  selector:
    matchLabels:
      app: longhorn-manager
  template:
    metadata:
      labels:
        app: longhorn-manager
    spec:
      containers:
      - name: longhorn-manager
        image: longhornio/longhorn-manager:v1.5.3
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        command:
        - longhorn-manager
        - -d
        - daemon
        - --engine-image
        - longhornio/longhorn-engine:v1.5.3
        - --instance-manager-image
        - longhornio/longhorn-instance-manager:v1.5.3
        - --share-manager-image
        - longhornio/longhorn-share-manager:v1.5.3
        - --backing-image-manager-image
        - longhornio/backing-image-manager:v1.5.3
        - --support-bundle-manager-image
        - longhornio/support-bundle-kit:v0.0.25
        - --manager-image
        - longhornio/longhorn-manager:v1.5.3
        - --service-account
        - longhorn-service-account
        ports:
        - containerPort: 9500
          name: manager
        readinessProbe:
          httpGet:
            path: /v1/healthz
            port: 9500
        volumeMounts:
        - name: dev
          mountPath: /host/dev/
        - name: proc
          mountPath: /host/proc/
        - name: longhorn
          mountPath: /var/lib/longhorn/
          mountPropagation: Bidirectional
        - name: longhorn-grpc-tls
          mountPath: /tmp/longhorn-grpc-tls/
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      hostNetwork: true
      hostPID: true
      serviceAccountName: longhorn-service-account
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
      volumes:
      - name: dev
        hostPath:
          path: /dev/
      - name: proc
        hostPath:
          path: /proc/
      - name: longhorn
        hostPath:
          path: /var/lib/longhorn/
      - name: longhorn-grpc-tls
        secret:
          secretName: longhorn-grpc-tls
          optional: true
  updateStrategy:
    type: RollingUpdate
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: longhorn-manager
  name: longhorn-backend
  namespace: longhorn-system
spec:
  type: ClusterIP
  sessionAffinity: ClientIP
  selector:
    app: longhorn-manager
  ports:
  - name: manager
    port: 9500
    targetPort: manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: longhorn-ui
  name: longhorn-ui
  namespace: longhorn-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: longhorn-ui
  template:
    metadata:
      labels:
        app: longhorn-ui
    spec:
      containers:
      - name: longhorn-ui
        image: longhornio/longhorn-ui:v1.5.3
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        env:
          - name: LONGHORN_MANAGER_IP
            value: "http://longhorn-backend:9500"
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 256Mi
      serviceAccountName: longhorn-service-account
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: longhorn-ui
  name: longhorn-frontend
  namespace: longhorn-system
spec:
  type: ClusterIP
  selector:
    app: longhorn-ui
  ports:
  - name: http
    port: 80
    targetPort: http
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: longhorn-service-account
  namespace: longhorn-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: longhorn-role
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - "*"
- apiGroups: [""]
  resources: ["pods", "events", "persistentvolumes", "persistentvolumeclaims", "persistentvolumeclaims/status", "nodes", "proxy/nodes", "pods/log", "secrets", "services", "endpoints", "configmaps", "serviceaccounts"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["daemonsets", "statefulsets", "deployments"]
  verbs: ["*"]
- apiGroups: ["batch"]
  resources: ["jobs", "cronjobs"]
  verbs: ["*"]
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses", "volumeattachments", "volumeattachments/status", "csinodes", "csidrivers"]
  verbs: ["*"]
- apiGroups: ["snapshot.storage.k8s.io"]
  resources: ["volumesnapshotclasses", "volumesnapshots", "volumesnapshotcontents", "volumesnapshotcontents/status"]
  verbs: ["*"]
- apiGroups: ["longhorn.io"]
  resources: ["volumes", "volumes/status", "engines", "engines/status", "replicas", "replicas/status", "settings", "engineimages", "engineimages/status", "nodes", "nodes/status", "instancemanagers", "instancemanagers/status", "sharemanagers", "sharemanagers/status", "backingimages", "backingimages/status", "backingimagemanagers", "backingimagemanagers/status", "backingimagedatasources", "backingimagedatasources/status", "backuptargets", "backuptargets/status", "backupvolumes", "backupvolumes/status", "backups", "backups/status", "recurringjobs", "recurringjobs/status", "orphans", "orphans/status", "snapshots", "snapshots/status", "supportbundles", "supportbundles/status", "systembackups", "systembackups/status", "systemrestores", "systemrestores/status", "volumeattachments", "volumeattachments/status"]
  verbs: ["*"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["*"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]
- apiGroups: ["scheduling.k8s.io"]
  resources: ["priorityclasses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["policy"]
  resources: ["poddisruptionbudgets"]
  verbs: ["*"]
- apiGroups: ["apiregistration.k8s.io"]
  resources: ["apiservices"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: longhorn-bind
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: longhorn-role
subjects:
- kind: ServiceAccount
  name: longhorn-service-account
  namespace: longhorn-system
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: longhorn
provisioner: driver.longhorn.io
allowVolumeExpansion: true
reclaimPolicy: Delete
volumeBindingMode: Immediate
parameters:
  numberOfReplicas: "2"
  staleReplicaTimeout: "2880"
  fromBackup: ""
  fsType: "ext4"
  dataLocality: "disabled"
---
# Longhorn CSI Plugin DaemonSet
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: longhorn-csi-plugin
  name: longhorn-csi-plugin
  namespace: longhorn-system
spec:
  selector:
    matchLabels:
      app: longhorn-csi-plugin
  template:
    metadata:
      labels:
        app: longhorn-csi-plugin
    spec:
      containers:
      - name: driver-registrar
        image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.9.0
        args:
        - --v=2
        - --csi-address=/csi/csi.sock
        - --kubelet-registration-path=/var/lib/kubelet/plugins/driver.longhorn.io/csi.sock
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: socket-dir
          mountPath: /csi/
        - name: registration-dir
          mountPath: /registration
      - name: longhorn-csi-plugin
        image: longhornio/longhorn-manager:v1.5.3
        args:
        - longhorn-manager
        - -d
        - csi
        - --nodeid=$(NODE_ID)
        - --endpoint=$(CSI_ENDPOINT)
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: unix:///csi/csi.sock
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
          allowPrivilegeEscalation: true
        volumeMounts:
        - name: socket-dir
          mountPath: /csi/
        - name: mountpoint-dir
          mountPath: /var/lib/kubelet/pods
          mountPropagation: Bidirectional
        - name: registration-dir
          mountPath: /registration
        - name: dev
          mountPath: /dev
        - name: sys
          mountPath: /sys
        - name: host
          mountPath: /host
          mountPropagation: HostToContainer
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: longhorn
          mountPath: /var/lib/longhorn/
          mountPropagation: Bidirectional
      hostNetwork: true
      hostPID: true
      serviceAccountName: longhorn-service-account
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
      volumes:
      - name: socket-dir
        hostPath:
          path: /var/lib/kubelet/plugins/driver.longhorn.io
          type: DirectoryOrCreate
      - name: mountpoint-dir
        hostPath:
          path: /var/lib/kubelet/pods
          type: Directory
      - name: registration-dir
        hostPath:
          path: /var/lib/kubelet/plugins_registry
          type: Directory
      - name: dev
        hostPath:
          path: /dev/
      - name: sys
        hostPath:
          path: /sys/
      - name: host
        hostPath:
          path: /
      - name: lib-modules
        hostPath:
          path: /lib/modules
      - name: longhorn
        hostPath:
          path: /var/lib/longhorn/
  updateStrategy:
    type: RollingUpdate
---
# CSI attacher
apiVersion: apps/v1
kind: Deployment
metadata:
  name: csi-attacher
  namespace: longhorn-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: csi-attacher
  template:
    metadata:
      labels:
        app: csi-attacher
    spec:
      containers:
      - name: csi-attacher
        image: k8s.gcr.io/sig-storage/csi-attacher:v4.4.0
        args:
        - --v=2
        - --csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock
        - --timeout=60s
        - --leader-election
        - --leader-election-namespace=longhorn-system
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: longhorn-csi-plugin
        image: longhornio/longhorn-manager:v1.5.3
        args:
        - longhorn-manager
        - -d
        - csi
        - --nodeid=$(NODE_ID)
        - --endpoint=$(CSI_ENDPOINT)
        - --manager-url=http://longhorn-backend:9500/v1
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      serviceAccountName: longhorn-service-account
      volumes:
      - name: socket-dir
        emptyDir: {}
---
# CSI provisioner
apiVersion: apps/v1
kind: Deployment
metadata:
  name: csi-provisioner
  namespace: longhorn-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: csi-provisioner
  template:
    metadata:
      labels:
        app: csi-provisioner
    spec:
      containers:
      - name: csi-provisioner
        image: k8s.gcr.io/sig-storage/csi-provisioner:v3.6.0
        args:
        - --v=2
        - --csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock
        - --timeout=60s
        - --leader-election
        - --leader-election-namespace=longhorn-system
        - --enable-capacity
        - --capacity-ownerref-level=1
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: longhorn-csi-plugin
        image: longhornio/longhorn-manager:v1.5.3
        args:
        - longhorn-manager
        - -d
        - csi
        - --nodeid=$(NODE_ID)
        - --endpoint=$(CSI_ENDPOINT)
        - --manager-url=http://longhorn-backend:9500/v1
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      serviceAccountName: longhorn-service-account
      volumes:
      - name: socket-dir
        emptyDir: {}
---
# CSI resizer
apiVersion: apps/v1
kind: Deployment
metadata:
  name: csi-resizer
  namespace: longhorn-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: csi-resizer
  template:
    metadata:
      labels:
        app: csi-resizer
    spec:
      containers:
      - name: csi-resizer
        image: k8s.gcr.io/sig-storage/csi-resizer:v1.9.0
        args:
        - --v=2
        - --csi-address=/var/lib/csi/sockets/pluginproxy/csi.sock
        - --timeout=60s
        - --leader-election
        - --leader-election-namespace=longhorn-system
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      - name: longhorn-csi-plugin
        image: longhornio/longhorn-manager:v1.5.3
        args:
        - longhorn-manager
        - -d
        - csi
        - --nodeid=$(NODE_ID)
        - --endpoint=$(CSI_ENDPOINT)
        - --manager-url=http://longhorn-backend:9500/v1
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/csi/sockets/pluginproxy/
      serviceAccountName: longhorn-service-account
      volumes:
      - name: socket-dir
        emptyDir: {}