apiVersion: v1
kind: ConfigMap
metadata:
  name: pihole-network-config
  namespace: dns
data:
  99-network.conf: |
    # Allow queries from home network
    listen-address=0.0.0.0
    bind-interfaces
    except-interface=lo
    local-service=false
    # Explicitly allow network range
    interface=eth0
    # Don't check for bogus private reverse lookups
    bogus-priv=false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: dns
  labels:
    app: pihole
  annotations:
    glance/hide: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
        - name: pihole
          image: pihole/pihole:2025.08.0
          ports:
            - containerPort: 80
            - containerPort: 53
              protocol: TCP
            - containerPort: 53
              protocol: UDP
          env:
            - name: TZ
              value: "Europe/London"
            - name: FTLCONF_webserver_api_password
              valueFrom:
                secretKeyRef:
                  name: pihole-secrets
                  key: WEBPASSWORD
            - name: SERVERIP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: FTLCONF_dns_upstreams
              value: "1.1.1.1;1.0.0.1"
            - name: DNSMASQ_LISTENING
              value: "all"
            - name: FTLCONF_dns_interface
              value: "all"
            - name: FTLCONF_dns_listeningMode
              value: "all"
            - name: FTLCONF_dns_hosts
              value: |
                10.147.20.27 pihole.home.coredev.uk
                10.147.20.27 frigate.home.coredev.uk
                10.147.20.27 argocd.home.coredev.uk
                10.147.20.27 longhorn.home.coredev.uk

                10.147.20.27 bazarr.home.coredev.uk
                10.147.20.27 cleanuparr.home.coredev.uk
                10.147.20.27 glance.home.coredev.uk
                10.147.20.27 huntarr.home.coredev.uk
                10.147.20.27 jellyfin.home.coredev.uk
                10.147.20.27 jellyseerr.home.coredev.uk
                10.147.20.27 notifiarr.home.coredev.uk
                10.147.20.27 radarr.home.coredev.uk
                10.147.20.27 sonarr.home.coredev.uk

                10.147.20.27 prowlarr.home.coredev.uk
                10.147.20.27 sabnzbd.home.coredev.uk
                10.147.20.27 qbittorrent.home.coredev.uk

                10.147.20.27 grafana.home.coredev.uk
                10.147.20.27 prometheus.home.coredev.uk
          volumeMounts:
            - name: config
              mountPath: /etc/pihole
            - name: dnsmasq
              mountPath: /etc/dnsmasq.d
            - name: network-config
              mountPath: /etc/dnsmasq.d/99-network.conf
              subPath: 99-network.conf
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: pihole-config
        - name: dnsmasq
          persistentVolumeClaim:
            claimName: pihole-dnsmasq
        - name: network-config
          configMap:
            name: pihole-network-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-config
  namespace: dns
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-dnsmasq
  namespace: dns
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-web
  namespace: dns
  annotations:
    glance/name: "Pi-hole"
    glance/icon: "di:pi-hole"
    glance/url: "https://pihole.home.coredev.uk/admin"
    glance/description: "DNS & Ad Blocking"
spec:
  selector:
    app: pihole
  ports:
    - name: web
      port: 80
      targetPort: 80
    - name: web-ssl
      port: 443
      targetPort: 443
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns
  namespace: dns
spec:
  selector:
    app: pihole
  type: LoadBalancer
  loadBalancerIP: 10.147.20.26
  externalTrafficPolicy: Local
  ports:
    - name: dns-tcp
      port: 53
      targetPort: 53
      protocol: TCP
    - name: dns-udp
      port: 53
      targetPort: 53
      protocol: UDP
