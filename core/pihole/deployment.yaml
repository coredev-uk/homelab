apiVersion: v1
kind: ConfigMap
metadata:
  name: pihole-network-config
  namespace: dns
data:
  99-network.conf: |
    # Allow queries from home network
    listen-address=0.0.0.0
    # Accept queries from any interface
    bind-interfaces
    # Don't bind to specific interfaces only
    except-interface=lo
    # Local network ranges that are allowed to query
    local-service=false
    # Enable hostname resolution via network scan
    enable-ra
    # Use system resolver for reverse lookups
    resolv-file=/etc/resolv.conf
  hostname-refresh.sh: |
    #!/bin/bash
    # Script to refresh hostnames by network scanning
    while true; do
      # Scan local network for active hosts and update hostnames
      for ip in $(seq 1 254); do
        target="10.147.20.$ip"
        if ping -c 1 -W 1 "$target" >/dev/null 2>&1; then
          # Try to get hostname via system tools
          hostname=$(getent hosts "$target" | awk '{print $2}' | head -1)
          if [[ -n "$hostname" && "$hostname" != "$target" ]]; then
            echo "Found: $target -> $hostname"
          fi
        fi
      done
      # Run every 5 minutes
      sleep 300
    done
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: dns
  labels:
    app: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
        - name: pihole
          image: pihole/pihole:2025.08.0
          ports:
            - containerPort: 80
            - containerPort: 53
              protocol: TCP
            - containerPort: 53
              protocol: UDP
          env:
            - name: TZ
              value: "Europe/London"
            - name: FTLCONF_webserver_api_password
              valueFrom:
                secretKeyRef:
                  name: pihole-secrets
                  key: WEBPASSWORD
            - name: SERVERIP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: FTLCONF_dns_upstreams
              value: "1.1.1.1;1.0.0.1"
            - name: DNSMASQ_LISTENING
              value: "all"
            - name: REV_SERVER
              value: "true"
            - name: REV_SERVER_DOMAIN
              value: "home.coredev.uk"
            - name: REV_SERVER_TARGET
              value: "10.147.1.10"
            - name: REV_SERVER_CIDR
              value: "10.147.0.0/16"
            - name: FTLCONF_dns_revlookup
              value: "true"
            - name: FTLCONF_dns_interface
              value: "all"
            - name: FTLCONF_dns_listeningMode
              value: "all"
            - name: FTLCONF_misc_refresh_hostnames
              value: "true"
          volumeMounts:
            - name: config
              mountPath: /etc/pihole
            - name: dnsmasq
              mountPath: /etc/dnsmasq.d
            - name: network-config
              mountPath: /etc/dnsmasq.d/99-network.conf
              subPath: 99-network.conf
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: pihole-config
        - name: dnsmasq
          persistentVolumeClaim:
            claimName: pihole-dnsmasq
        - name: network-config
          configMap:
            name: pihole-network-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-config
  namespace: dns
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-dnsmasq
  namespace: dns
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-web
  namespace: dns
spec:
  selector:
    app: pihole
  ports:
    - name: web
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns
  namespace: dns
spec:
  selector:
    app: pihole
  type: LoadBalancer
  loadBalancerIP: 10.147.20.26
  externalTrafficPolicy: Local
  ports:
    - name: dns-tcp
      port: 53
      targetPort: 53
      protocol: TCP
    - name: dns-udp
      port: 53
      targetPort: 53
      protocol: UDP
