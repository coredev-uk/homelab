apiVersion: apps/v1
kind: Deployment
metadata:
  name: sabnzbd
  namespace: tunnelled
  labels:
    app: sabnzbd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sabnzbd
  template:
    metadata:
      labels:
        app: sabnzbd
    spec:
      initContainers:
        - name: scripts-setup
          image: busybox:latest
          command: ['sh', '-c']
          args:
            - |
              # Create scripts directory
              mkdir -p /scripts
              
              # Copy scripts from ConfigMap
              cp /tmp/scripts/* /scripts/
              
              # Set executable permissions
              chmod +x /scripts/*.py
              
              echo "Scripts setup completed"
          volumeMounts:
            - name: scripts-volume
              mountPath: /scripts
            - name: scripts-temp
              mountPath: /tmp/scripts
        - name: config-setup
          image: busybox:latest
          command: ['sh', '-c']
          args:
            - |
              # Ensure sabnzbd.ini exists and has essential settings
              if [ -f /config/sabnzbd.ini ]; then
                echo "sabnzbd.ini exists, updating essential settings..."
                
                # Update host_whitelist if it doesn't contain sabnzbd.tunnelled
                if ! grep -q "sabnzbd.tunnelled" /config/sabnzbd.ini; then
                  sed -i 's/host_whitelist = .*/host_whitelist = sabnzbd.home.coredev.uk, sabnzbd.tunnelled, sabnzbd/' /config/sabnzbd.ini
                  echo "Updated host_whitelist"
                fi
                
                # Ensure script_dir is set correctly
                if ! grep -q "script_dir = /scripts" /config/sabnzbd.ini; then
                  sed -i 's|script_dir = .*|script_dir = /scripts|' /config/sabnzbd.ini
                  echo "Updated script_dir"
                fi
              else
                echo "sabnzbd.ini not found, will be created by SABnzbd on first run"
              fi
          volumeMounts:
            - name: config
              mountPath: /config
      containers:
        - name: gluetun
          image: qmcgaw/gluetun:v3.40.0
          ports:
            - containerPort: 8000
            - containerPort: 8090
          securityContext:
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
          env:
            - name: VPN_SERVICE_PROVIDER
              valueFrom:
                configMapKeyRef:
                  name: vpn-config
                  key: VPN_SERVICE_PROVIDER
            - name: VPN_TYPE
              valueFrom:
                configMapKeyRef:
                  name: vpn-config
                  key: VPN_TYPE
            - name: WIREGUARD_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: vpn-secrets
                  key: WIREGUARD_PRIVATE_KEY
            - name: SERVER_COUNTRIES
              valueFrom:
                configMapKeyRef:
                  name: vpn-config
                  key: SERVER_COUNTRIES
            - name: FIREWALL_OUTBOUND_SUBNETS
              valueFrom:
                configMapKeyRef:
                  name: vpn-config
                  key: FIREWALL_OUTBOUND_SUBNETS
            - name: DOT
              value: "off"
            - name: DNS_ADDRESS
              value: "1.1.1.1"
            - name: DNS_KEEP_NAMESERVER
              value: "on"
            - name: HTTPPROXY
              value: "on"
            - name: HTTPPROXY_LISTENING_ADDRESS
              value: ":8888"
            - name: HTTPPROXY_STEALTH
              value: "on"
            - name: VPN_PORT_FORWARDING
              value: "on"
            - name: HTTP_CONTROL_SERVER_LOG
              value: "on"
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "200m"
        - name: sabnzbd
          image: lscr.io/linuxserver/sabnzbd:4.5.3
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Europe/London"
          volumeMounts:
            - name: config
              mountPath: /config
            - name: downloads
              mountPath: /downloads
            - name: scripts-volume
              mountPath: /scripts
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: sabnzbd-config
        - name: downloads
          persistentVolumeClaim:
            claimName: downloads-data-host
        - name: scripts-volume
          emptyDir: {}
        - name: scripts-temp
          configMap:
            name: sabnzbd-scripts
            defaultMode: 0755
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sabnzbd-config
  namespace: tunnelled
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn
---
apiVersion: v1
kind: Service
metadata:
  name: sabnzbd
  namespace: tunnelled
spec:
  selector:
    app: sabnzbd
  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: gluetun-control
      port: 8000
      targetPort: 8000
  type: ClusterIP
